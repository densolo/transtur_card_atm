
import org.gradle.internal.os.OperatingSystem

plugins {
    id 'distribution'
}

version = "0.0.4"

ext {
    isWindows = OperatingSystem.current().isWindows()
    platformExt = isWindows ? ".exe": ""
    platformCmdExt = isWindows ? ".cmd": ""
}


task copyCss(type:Copy) {
    from "web/node_modules/bootstrap/dist/css"
    into "build/resources/app/css/"
    include "bootstrap.min.css"
}

task npmInstall(type:Exec) {
    workingDir "${project.projectDir}/web"
  
    commandLine "npm${platformCmdExt}", 'install'
}


task npmBuild(type:Exec) {
    workingDir "${project.projectDir}/web"
  
    commandLine "npm${platformCmdExt}", 'run', 'build'
}
npmBuild.dependsOn copyCss


task goGetAll(type:Exec) {
    workingDir "${project.projectDir}"
    environment "GOPATH", "${project.projectDir}"

    commandLine 'go', 'get', './...'
}


task goBuild(type:Exec) {
    workingDir "${project.projectDir}"
    environment "GOPATH", "${project.projectDir}"

    commandLine 'go', 'build', '-o', "build/transtur_card_atm${platformExt}", 'src/transtur_card_atm/main/main.go'
}


task goTest(type:Exec) {
  workingDir "${project.projectDir}"
  environment "GOPATH", "${project.projectDir}"

  commandLine 'go', 'test', 'transtur_card_atm/tests'
}


task goRun(type:Exec) {
  workingDir "${project.projectDir}/build"
  environment "GOPATH", "${project.projectDir}"

  commandLine "${project.projectDir}/build/transtur_card_atm${platformExt}"
}
goRun.dependsOn goBuild


distZip {
    from('build') {
        into ''
        include 'vendor/**/*',
            'resources/**/*',
            'transtur_card_atm',
            'transtur_card_atm.exe'
    }

    from('conf') {
        into ''
    }
}
distZip.dependsOn goBuild, npmBuild